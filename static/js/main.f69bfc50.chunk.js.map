{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/Card.js","components/CardList.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","htmlFor","id","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Card","name","email","src","alt","CardList","robots","map","user","i","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,sBAAKC,UAAU,MAAf,UACA,uBAAOC,QAAQ,gBACf,uBACEC,GAAG,cACHF,UAAU,mCACVG,KAAK,SACLC,YAAY,gBACZC,SAAUN,QCDDO,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCSEC,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOb,EAAQ,EAARA,GAC1B,OACE,sBAAKF,UAAU,sDAAf,UACE,qBAAKgB,IAAG,+BAA0Bd,EAA1B,YAAwCe,IAAI,UACpD,gCACE,6BAAKH,IACL,4BAAIC,WCcGG,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEEpB,GAAIiB,EAAOG,GAAGpB,GACdY,KAAMK,EAAOG,GAAGR,KAChBC,MAAOI,EAAOG,GAAGP,OAHZO,SCYJC,E,kDAnBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,GAHA,E,qDAOd,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACE,OAAIG,KAAKJ,MAAMC,SACN,2DAEFG,KAAKrB,MAAMK,a,GAhBMkB,aC8CbC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACXL,OAAQ,GACRe,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACV,OAAQsB,S,oBAO1C,WACE,MAA8Bb,KAAKJ,MAA5BL,EAAP,EAAOA,OAAQe,EAAf,EAAeA,YACTQ,EAAiBvB,EAAOwB,QAAO,SAAAC,GACnC,OAAOA,EAAM9B,KAAK+B,cAAcC,SAASZ,EAAYW,kBAGvD,OAAQ1B,EAAO4B,OAGX,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc6B,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUb,OAAQuB,WAP1B,6C,GA1BYZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f69bfc50.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n    <div className='pa2'>\n    <label htmlFor='robotsearch'></label>\n    <input \n      id='robotsearch'\n      className='pa3 ba b--green bg-lightest-blue'\n      type='search' \n      placeholder='search robots' \n      onChange={searchChange}\n    />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img src={`https://robohash.org/${id}?200x200`} alt='robot'/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card \n              key={i} \n              id={robots[i].id} \n              name={robots[i].name} \n              email={robots[i].email}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({hasError: true});\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good.</h1>\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({robots: users}));   \n  }\n\n  onSearchChange = (event) => {   \n    this.setState({searchfield: event.target.value});\n  }\n\n  render() {\n    const {robots, searchfield} = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n\n    return !robots.length\n    ? <h1>Loading</h1>\n    : (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}